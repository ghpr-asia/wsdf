name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Ideally, we could cache wireshark's source files using GitHub's cache
      # action. Unfortunately, there is a bug when caching git submodules.
      #
      # See https://github.com/actions/checkout/discussions/1028
      - name: Checkout wireshark
        run: git submodule update --init --recursive ./epan-sys/wireshark

      - name: Set up wireshark
        run: sudo bash ./epan-sys/wireshark/tools/debian-setup.sh

      - name: Install ninja
        run: sudo apt-get install -y ninja-build

      - name: Build and install wireshark
        run: |
          cd ./epan-sys/wireshark && \
          mkdir -p build && \
          cd build && \
          cmake -G Ninja \
            -DBUILD_androiddump=OFF \
            -DBUILD_capinfos=OFF \
            -DBUILD_captype=OFF \
            -DBUILD_ciscodump=OFF \
            -DBUILD_corbaidl2wrs=OFF \
            -DBUILD_dcerpcidl2wrs=OFF \
            -DBUILD_dftest=OFF \
            -DBUILD_dpauxmon=OFF \
            -DBUILD_dumpcap=OFF \
            -DBUILD_editcap=OFF \
            -DBUILD_etwdump=OFF \
            -DBUILD_logray=OFF \
            -DBUILD_mergecap=OFF \
            -DBUILD_randpkt=OFF \
            -DBUILD_randpktdump=OFF \
            -DBUILD_rawshark=OFF \
            -DBUILD_reordercap=OFF \
            -DBUILD_sshdump=OFF \
            -DBUILD_text2pcap=OFF \
            -DBUILD_tfshark=OFF \
            -DBUILD_tshark=OFF \
            -DBUILD_wifidump=OFF \
            -DBUILD_wireshark=OFF \
            -DBUILD_xxx2deb=OFF \
            .. && \
          ninja &&
          make install

      - name: Check libwireshark.so
        run: pkg-config --libs wireshark

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --no-deps -- -Dwarnings

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
